{"version":3,"sources":["components/formfront.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b66f5bc5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form=({setInputText,todos,setTodos, inputText,setStatus})=>{\r\n    //js code and function\r\n    const inputTextHandler = (e) =>{\r\n        console.log(e);\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) =>{\r\n    e.preventDefault();\r\n    setTodos([\r\n        ...todos, {text: inputText, completed: false, id:Math.random()*1000}\r\n    ]);\r\n    setInputText(\"\");\r\n    };\r\n\r\n    const statusHandler =(e) =>{\r\n        setStatus=e.target.value;\r\n    };\r\n    return( \r\n    <form>\r\n        <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\"/>\r\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n            <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n            <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n            </select>\r\n        </div>\r\n    </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n    //events\r\n    const deleteHandler =() =>{\r\n        setTodos(todos.filter(el => el.id !== todo.id));\r\n        //console.log(todo);\r\n    };\r\n    const completeHandler = () =>{\r\n        setTodos(todos.map(item => {\r\n          if(item.id === todo.id) {\r\n              return{\r\n                  ...item, completed: !item.completed\r\n              };\r\n          } \r\n          return item;\r\n        }));\r\n    };\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \" \"}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\" >\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\n//import components\r\nimport Todo from './Todo'\r\nconst TodoList = ({todos,setTodos, filteredTodos}) =>{\r\n    \r\n    return(\r\n    <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n            {todos.map(todo => (\r\n            <Todo \r\n            setTodos={setTodos} \r\n            todos={todos}\r\n            todo={todo} \r\n            key={todo.id} \r\n            text={todo.text}/>\r\n            ))}\r\n        </ul>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\n//importing components\nimport Form from \"./components/formfront\";\nimport TodoList from \"./components/TodoList\";\n\n\nfunction App() {\n   \n    //states\n    const [inputText, setInputText]=useState(\"\");\n    const [todos,setTodos]=useState([]);\n    const [status, setStatus]= useState(\"all\");\n    const [filteredTodos, setFilteredTodos]= useState([]);\n    \n    //use effect\n     useEffect(()=>{\n        filterHandler();\n    }, [todos,status]);//empty array menas that the useeffect function only runs once when the components are first rendered\n    \n    //functions and events\n    const filterHandler = () => {\n        switch(status){\n            case \"completed\":\n                setFilteredTodos(todos.filter(todo => todo.completed === true));\n                break;\n            case \"uncompleted\":\n                setFilteredTodos(todos.filter(todo => todo.completed === false));\n                break;\n            default:\n                setFilteredTodos(todos);\n                break;\n        }\n    }\n    return ( < div className = \"App\" >\n       <header>\n        <h1>To Do List</h1>\n    </header>\n    <Form  \n    inputText={inputText} \n    todos={todos} \n    setTodos={setTodos} \n    setInputText={setInputText}\n    setStatus={setStatus} \n   \n    />\n    <TodoList  \n    filteredTodos={filteredTodos} \n    setTodos={setTodos} \n    todos={todos}\n    /> \n    </div >\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}